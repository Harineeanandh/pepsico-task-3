{"ast":null,"code":"var _jsxFileName = \"/home/harinee/Documents/Pepsico Advanced Software Engineering Job Sim/Task3Answer/pepsico-3-flow/src/DistributorTable.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport './DistributorTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst distributors = [{\n  name: \"Saltyshore Soda Co.\",\n  lastMonth: 2455,\n  ytdAverage: 2000,\n  forecasted: 2500,\n  trend: [1800, 2100, 2455]\n}, {\n  name: \"Gerbermin Sips\",\n  lastMonth: 500,\n  ytdAverage: 643,\n  forecasted: 455,\n  trend: [700, 720, 500]\n}, {\n  name: \"Wicker's\",\n  lastMonth: 7600,\n  ytdAverage: 8600,\n  forecasted: 7000,\n  trend: [8500, 8400, 7600]\n}, {\n  name: \"Tips Taps\",\n  lastMonth: 5444553,\n  ytdAverage: 5127384,\n  forecasted: 5495321,\n  trend: [5000000, 5200000, 5444553]\n}, {\n  name: \"Hancho's\",\n  lastMonth: 5644,\n  ytdAverage: 5322,\n  forecasted: 5744,\n  trend: [5100, 5200, 5644]\n}, {\n  name: \"Carlsburd\",\n  lastMonth: 4321,\n  ytdAverage: 4532,\n  forecasted: 4123,\n  trend: [4600, 4550, 4321]\n}, {\n  name: \"Wholestream\",\n  lastMonth: 65432,\n  ytdAverage: 67654,\n  forecasted: 64321,\n  trend: [67000, 68500, 65432]\n}, {\n  name: \"Fairings\",\n  lastMonth: 3454,\n  ytdAverage: 2343,\n  forecasted: 4076,\n  trend: [2200, 2400, 3454]\n}, {\n  name: \"National Pour\",\n  lastMonth: 20322,\n  ytdAverage: 20319,\n  forecasted: 20321,\n  trend: [20000, 20500, 20322]\n}];\nconst getStatus = (forecast, ytd) => {\n  if (forecast > ytd * 1.1) return 'Overperforming';\n  if (forecast < ytd * 0.9) return 'At Risk';\n  return 'On Track';\n};\nconst statusColors = {\n  'Overperforming': '#4caf50',\n  'On Track': '#2196f3',\n  'At Risk': '#f44336'\n};\nconst DistributorCard = _ref => {\n  let {\n    distributor\n  } = _ref;\n  const {\n    name,\n    lastMonth,\n    ytdAverage,\n    forecasted,\n    trend\n  } = distributor;\n  const status = getStatus(forecasted, ytdAverage);\n  const data = trend.map((value, index) => ({\n    month: `M${index + 1}`,\n    shipments: value\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Last Month: \", lastMonth]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"YTD Avg: \", ytdAverage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Forecasted: \", forecasted]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: statusColors[status],\n          fontWeight: 'bold'\n        },\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 100,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          hide: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"shipments\",\n          stroke: \"#ffd276\",\n          strokeWidth: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_c = DistributorCard;\nconst DistributorTable = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: distributors.map(dist => /*#__PURE__*/_jsxDEV(DistributorCard, {\n      distributor: dist\n    }, dist.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_c2 = DistributorTable;\nexport default DistributorTable;\nvar _c, _c2;\n$RefreshReg$(_c, \"DistributorCard\");\n$RefreshReg$(_c2, \"DistributorTable\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","distributors","name","lastMonth","ytdAverage","forecasted","trend","getStatus","forecast","ytd","statusColors","DistributorCard","_ref","distributor","status","data","map","value","index","month","shipments","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fontWeight","width","height","dataKey","hide","type","stroke","strokeWidth","_c","DistributorTable","dist","_c2","$RefreshReg$"],"sources":["/home/harinee/Documents/Pepsico Advanced Software Engineering Job Sim/Task3Answer/pepsico-3-flow/src/DistributorTable.js"],"sourcesContent":["import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport './DistributorTable.css';\n\nconst distributors = [\n    {\n        name: \"Saltyshore Soda Co.\", lastMonth: 2455, ytdAverage: 2000, forecasted: 2500,\n        trend: [1800, 2100, 2455]\n    },\n    {\n        name: \"Gerbermin Sips\", lastMonth: 500, ytdAverage: 643, forecasted: 455,\n        trend: [700, 720, 500]\n    },\n    {\n        name: \"Wicker's\", lastMonth: 7600, ytdAverage: 8600, forecasted: 7000,\n        trend: [8500, 8400, 7600]\n    },\n    {\n        name: \"Tips Taps\", lastMonth: 5444553, ytdAverage: 5127384, forecasted: 5495321,\n        trend: [5000000, 5200000, 5444553]\n    },\n    {\n        name: \"Hancho's\", lastMonth: 5644, ytdAverage: 5322, forecasted: 5744,\n        trend: [5100, 5200, 5644]\n    },\n    {\n        name: \"Carlsburd\", lastMonth: 4321, ytdAverage: 4532, forecasted: 4123,\n        trend: [4600, 4550, 4321]\n    },\n    {\n        name: \"Wholestream\", lastMonth: 65432, ytdAverage: 67654, forecasted: 64321,\n        trend: [67000, 68500, 65432]\n    },\n    {\n        name: \"Fairings\", lastMonth: 3454, ytdAverage: 2343, forecasted: 4076,\n        trend: [2200, 2400, 3454]\n    },\n    {\n        name: \"National Pour\", lastMonth: 20322, ytdAverage: 20319, forecasted: 20321,\n        trend: [20000, 20500, 20322]\n    },\n];\n\nconst getStatus = (forecast, ytd) => {\n    if (forecast > ytd * 1.1) return 'Overperforming';\n    if (forecast < ytd * 0.9) return 'At Risk';\n    return 'On Track';\n};\n\nconst statusColors = {\n    'Overperforming': '#4caf50',\n    'On Track': '#2196f3',\n    'At Risk': '#f44336'\n};\n\nconst DistributorCard = ({ distributor }) => {\n    const { name, lastMonth, ytdAverage, forecasted, trend } = distributor;\n    const status = getStatus(forecasted, ytdAverage);\n\n    const data = trend.map((value, index) => ({\n        month: `M${index + 1}`,\n        shipments: value\n    }));\n\n    return (\n        <div className=\"card\">\n            <h2>{name}</h2>\n            <div className=\"metrics\">\n                <div>Last Month: {lastMonth}</div>\n                <div>YTD Avg: {ytdAverage}</div>\n                <div>Forecasted: {forecasted}</div>\n                <div style={{ color: statusColors[status], fontWeight: 'bold' }}>{status}</div>\n            </div>\n            <ResponsiveContainer width=\"100%\" height={100}>\n                <LineChart data={data}>\n                    <XAxis dataKey=\"month\" />\n                    <YAxis hide />\n                    <Tooltip />\n                    <Line type=\"monotone\" dataKey=\"shipments\" stroke=\"#ffd276\" strokeWidth={2} />\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    );\n};\n\nconst DistributorTable = () => {\n    return (\n        <div className=\"dashboard\">\n            {distributors.map(dist => (\n                <DistributorCard key={dist.name} distributor={dist} />\n            ))}\n        </div>\n    );\n};\n\nexport default DistributorTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}